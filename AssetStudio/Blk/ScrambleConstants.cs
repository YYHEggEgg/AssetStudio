using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AssetStudio
{
    internal partial class ScrambleConstants
    {
        // see genshinblkstuff magic_constants.h for notes
        internal static readonly byte[] KeyScrambleTable = new byte[] { 0xF7, 0xE7, 0xD8, 0xB8, 0x64, 0x31, 0xD1, 0x74, 0x88, 0xAA, 0xB4, 0x8B, 0x6A, 0xA3, 0xFC, 0x55, 0x59, 0xC5, 0x6D, 0xC9, 0x9A, 0x11, 0x2F, 0x37, 0xAD, 0x35, 0x15, 0x62, 0x61, 0x04, 0x44, 0x01, 0xDD, 0x47, 0x3D, 0xFF, 0x8F, 0x51, 0xAF, 0x0F, 0x19, 0x23, 0x92, 0x13, 0x00, 0x53, 0x4B, 0x67, 0x21, 0x1C, 0x1B, 0x94, 0xE2, 0x29, 0x9F, 0x4C, 0xFB, 0xBB, 0x75, 0xF0, 0xFE, 0x1F, 0xDB, 0xEF, 0x1D, 0xF1, 0x3A, 0x1A, 0x05, 0x06, 0xCE, 0xDE, 0x63, 0x0A, 0x6B, 0x2D, 0x28, 0x41, 0x6C, 0x0C, 0x42, 0xDC, 0x58, 0xB6, 0x39, 0x2E, 0xD2, 0xF6, 0x2B, 0xAC, 0x84, 0x96, 0x17, 0xF3, 0x3F, 0x8D, 0xAB, 0x95, 0xCD, 0x30, 0x0E, 0x66, 0x90, 0xF4, 0xED, 0xE0, 0x8E, 0xC2, 0x78, 0x2C, 0x7E, 0xF8, 0x5D, 0x02, 0x91, 0xFA, 0x3C, 0xDA, 0xB7, 0x6F, 0xF9, 0x4F, 0x14, 0x5E, 0xEA, 0x24, 0x56, 0x9E, 0xC1, 0xA5, 0x85, 0xD7, 0x08, 0x83, 0x4E, 0xF5, 0x76, 0x32, 0x86, 0x5C, 0xD3, 0x09, 0x5F, 0xFD, 0x36, 0x03, 0xEE, 0xE3, 0x34, 0x77, 0x79, 0x18, 0xBD, 0xDF, 0x97, 0x71, 0xBA, 0x65, 0x68, 0x7A, 0x54, 0x80, 0x48, 0x38, 0x5B, 0x4D, 0x5A, 0x7F, 0x0B, 0x7C, 0xA6, 0x7B, 0x25, 0xD6, 0x0D, 0x40, 0xD0, 0x07, 0x99, 0x9D, 0x93, 0x69, 0xD9, 0x8C, 0xB3, 0xB5, 0xA4, 0x1E, 0xCB, 0x33, 0x82, 0xE9, 0xC3, 0x60, 0xA7, 0xAE, 0x45, 0xBE, 0xB1, 0x46, 0xB2, 0x9C, 0x22, 0xC7, 0x81, 0x98, 0xA9, 0xD5, 0x6E, 0xE1, 0x10, 0xCA, 0xBC, 0x4A, 0x70, 0xD4, 0xC4, 0x72, 0x12, 0xCF, 0x2A, 0x87, 0x16, 0xC8, 0x73, 0xA1, 0x3E, 0x52, 0x50, 0xA8, 0x57, 0x27, 0xEC, 0xCC, 0x7D, 0xE4, 0xA0, 0x89, 0xBF, 0xE5, 0x8A, 0x20, 0xEB, 0xC0, 0xA2, 0x49, 0xB9, 0xE8, 0x26, 0xC6, 0xE6, 0xB0, 0x3B, 0x9B, 0xF2, 0x43, 0x5E, 0xB0, 0xE6, 0x0D, 0xF9, 0x87, 0xD7, 0x8A, 0xDF, 0xE7, 0x19, 0x99, 0x6F, 0xD5, 0x5B, 0x4E, 0xCB, 0xC2, 0x48, 0xD2, 0xF2, 0x44, 0x35, 0x03, 0xE9, 0x86, 0xD0, 0x95, 0x02, 0x4A, 0x04, 0x62, 0xC5, 0x9D, 0x1D, 0xE2, 0xFD, 0x53, 0x08, 0x8D, 0x5D, 0x75, 0xD9, 0x3F, 0x94, 0x59, 0x14, 0x29, 0x98, 0x76, 0x8C, 0x79, 0x2E, 0x8F, 0x39, 0x0C, 0x4C, 0xC8, 0xC0, 0x81, 0x9C, 0x10, 0xBB, 0xAF, 0xF7, 0xE5, 0xB2, 0xB3, 0xEE, 0x56, 0x57, 0xB8, 0xFA, 0x40, 0x7A, 0x72, 0x77, 0x24, 0x6C, 0xC6, 0x47, 0x3A, 0x74, 0xCF, 0x89, 0xB4, 0x9B, 0x26, 0xAA, 0x38, 0x09, 0xC3, 0x1C, 0xDE, 0x9F, 0xDD, 0x16, 0x1F, 0x55, 0xBD, 0xAD, 0xAC, 0x80, 0x4F, 0x64, 0x4B, 0x71, 0xB7, 0xF6, 0x06, 0x2B, 0xC7, 0x01, 0xEA, 0x46, 0xA6, 0xEB, 0x3D, 0xCA, 0x07, 0x34, 0x1B, 0xFF, 0x7C, 0x7D, 0x2D, 0x37, 0x67, 0x60, 0x9A, 0xC4, 0x97, 0x7F, 0xD6, 0xBE, 0xAE, 0x85, 0x25, 0x88, 0x65, 0xA2, 0x00, 0xB6, 0x8E, 0xD4, 0x6E, 0x1A, 0x63, 0x36, 0x92, 0xC1, 0xE1, 0x15, 0xA5, 0x58, 0x3B, 0x7E, 0x22, 0x2F, 0x84, 0x0F, 0x5C, 0x96, 0xB1, 0xF1, 0x6D, 0x8B, 0xF4, 0xA8, 0xB5, 0x0B, 0xFE, 0x23, 0xE3, 0xCE, 0xF8, 0xF5, 0x51, 0x45, 0x43, 0x18, 0x1E, 0xD1, 0xBA, 0xBC, 0x90, 0x21, 0x70, 0x30, 0xC9, 0x2A, 0xEC, 0x61, 0x7B, 0x66, 0x5F, 0x13, 0x33, 0x20, 0x6B, 0xCD, 0x3C, 0xA0, 0x93, 0x31, 0xB9, 0x05, 0x82, 0xFB, 0x3E, 0x17, 0x12, 0x6A, 0x0A, 0xCC, 0x4D, 0xA1, 0x73, 0x52, 0x78, 0xBF, 0x28, 0x50, 0x69, 0xDC, 0x68, 0x42, 0xE0, 0xA4, 0x2C, 0xEF, 0xF0, 0x11, 0xE8, 0x91, 0x49, 0x83, 0x5A, 0xF3, 0x32, 0xDB, 0xAB, 0xDA, 0x27, 0x0E, 0xED, 0xA3, 0xFC, 0x41, 0xA7, 0xA9, 0xD3, 0x9E, 0xE4, 0xD8, 0x54, 0x95, 0xAE, 0xF0, 0xD5, 0x73, 0x24, 0xD2, 0xA5, 0x99, 0x0B, 0x1B, 0xC4, 0x9A, 0xD8, 0x69, 0x6F, 0x25, 0xED, 0x8E, 0x91, 0x63, 0xF8, 0x35, 0x62, 0x5B, 0x94, 0x88, 0xB2, 0x5C, 0x0F, 0xDD, 0xA4, 0x7A, 0x1A, 0x12, 0xC6, 0x37, 0x44, 0xF1, 0x4E, 0xB9, 0x4D, 0x43, 0xD1, 0xAD, 0xEB, 0xB4, 0x46, 0x80, 0x30, 0x5E, 0xE4, 0x87, 0x6E, 0x0A, 0x82, 0xCF, 0x74, 0x38, 0xB5, 0xC1, 0xD6, 0x01, 0x05, 0xE8, 0x83, 0xA9, 0x6D, 0xCE, 0xA8, 0xC5, 0x51, 0xA3, 0x3F, 0xDA, 0x03, 0xD0, 0x3A, 0x39, 0x6C, 0x11, 0x97, 0x68, 0x54, 0xC0, 0x4B, 0xDF, 0x19, 0x0C, 0x21, 0x1F, 0x66, 0xBD, 0xE9, 0x61, 0x49, 0xC8, 0x42, 0xBC, 0xEC, 0x7F, 0xC3, 0x4F, 0x2E, 0xA1, 0x58, 0x3D, 0x81, 0xE3, 0x14, 0xB8, 0x02, 0x23, 0x9E, 0x77, 0x2B, 0x33, 0xA6, 0x93, 0x13, 0x34, 0x0E, 0x06, 0x45, 0xFB, 0x07, 0x75, 0x0D, 0x1E, 0x40, 0xAB, 0x7D, 0xF5, 0xBB, 0x55, 0xEF, 0x04, 0x65, 0x79, 0x2F, 0xCA, 0xF3, 0x29, 0xCB, 0xEA, 0x17, 0xF4, 0xE6, 0x71, 0x4C, 0x50, 0x26, 0xD9, 0x78, 0x5F, 0x09, 0x9C, 0x1C, 0x85, 0x31, 0x22, 0x9B, 0xC9, 0xE0, 0x8F, 0xAC, 0x57, 0x8B, 0x7C, 0x47, 0x7E, 0x16, 0xF7, 0x08, 0x5A, 0x59, 0x1D, 0xC7, 0xF9, 0x00, 0x2D, 0x60, 0x3C, 0x9F, 0x96, 0xA2, 0xBA, 0x20, 0x70, 0xF6, 0x48, 0xB0, 0x2C, 0x72, 0xE1, 0x64, 0xE7, 0xFF, 0xB7, 0x56, 0xA7, 0x53, 0x84, 0xD7, 0xE2, 0xD4, 0xA0, 0xB1, 0x8C, 0xE5, 0x2A, 0xDC, 0x15, 0x28, 0x5D, 0x3B, 0x36, 0x7B, 0x86, 0x6A, 0xDB, 0x10, 0xBE, 0x6B, 0xFE, 0x9D, 0x18, 0xDE, 0x76, 0xF2, 0xCD, 0xB6, 0x32, 0xFC, 0x41, 0xAF, 0xBF, 0x67, 0xB3, 0xAA, 0xC2, 0x8A, 0xFD, 0x89, 0xCC, 0xFA, 0x90, 0x98, 0x8D, 0x52, 0xD3, 0xEE, 0x92, 0x3E, 0x4A, 0x27, 0x2A, 0xD7, 0x9E, 0x02, 0x53, 0x63, 0xEA, 0xE9, 0x8F, 0x35, 0x22, 0x7F, 0xFE, 0xCA, 0x75, 0x46, 0x57, 0x94, 0xD9, 0x4E, 0xD2, 0xD4, 0x76, 0xA1, 0xC3, 0xD8, 0xBC, 0x9B, 0x84, 0x87, 0x91, 0x51, 0xB1, 0xAB, 0x81, 0x64, 0x47, 0xAF, 0x9D, 0x6A, 0x5B, 0x2D, 0xD6, 0x95, 0x77, 0x03, 0xC1, 0x10, 0xAD, 0x61, 0x0C, 0xBF, 0x11, 0x34, 0x7E, 0x01, 0x38, 0x20, 0x4B, 0xB6, 0x4A, 0x1A, 0x45, 0x99, 0x5F, 0x26, 0xBB, 0xC5, 0xCD, 0x23, 0xF1, 0xF7, 0xB4, 0x8E, 0xE1, 0xF8, 0x68, 0x56, 0x29, 0xD5, 0x3D, 0xEF, 0x12, 0x28, 0xC4, 0x2E, 0x79, 0xA6, 0x48, 0x85, 0x73, 0x14, 0xE4, 0xC6, 0x6B, 0x92, 0x30, 0x27, 0x93, 0x13, 0x0D, 0xE2, 0xC9, 0xF0, 0x65, 0xDF, 0xFB, 0xE3, 0x06, 0x2F, 0x8C, 0x4C, 0x18, 0x15, 0xD3, 0x49, 0x3E, 0x07, 0x59, 0xB0, 0x88, 0xA9, 0xC8, 0x3B, 0x86, 0xEE, 0x5C, 0x7A, 0x5E, 0xFF, 0x8D, 0xAC, 0x08, 0xE6, 0x60, 0x54, 0xA0, 0x7D, 0x40, 0x33, 0xA8, 0xFC, 0xE0, 0x37, 0x98, 0xBD, 0xEC, 0x09, 0xB2, 0x71, 0x58, 0x1F, 0xDE, 0x74, 0x89, 0x36, 0x52, 0x66, 0xA2, 0x3C, 0x96, 0x5D, 0x50, 0x90, 0x41, 0xF5, 0x17, 0x2B, 0x0B, 0xDC, 0xF6, 0x00, 0x83, 0xDD, 0x6D, 0xB5, 0x3A, 0x9C, 0xB8, 0x70, 0x7C, 0x43, 0x69, 0xFD, 0x32, 0x1B, 0xED, 0x0F, 0x55, 0x97, 0xC2, 0xFA, 0x39, 0x4F, 0x9A, 0x82, 0x19, 0xE7, 0x78, 0x6E, 0xCB, 0xA4, 0xBE, 0x24, 0xB3, 0xF3, 0xCC, 0xCF, 0x1C, 0xF9, 0x44, 0xA5, 0x1E, 0x80, 0x3F, 0xD0, 0x21, 0xA3, 0xE8, 0x31, 0x05, 0x16, 0x8A, 0xBA, 0x67, 0x0E, 0xE5, 0xB7, 0xD1, 0x42, 0x1D, 0xDB, 0x72, 0x6C, 0xA7, 0xCE, 0x04, 0x4D, 0xDA, 0xC7, 0x8B, 0x9F, 0x6F, 0x0A, 0x2C, 0xEB, 0xF2, 0x5A, 0x7B, 0xAA, 0x25, 0xC0, 0x62, 0xAE, 0xF4, 0xB9, 0x33, 0x16, 0xC6, 0xF1, 0xE4, 0xCB, 0x65, 0x55, 0xC5, 0xD4, 0x59, 0x74, 0xB8, 0xD0, 0x3A, 0xE2 };
        internal static readonly byte[] StackStuff = new byte[] { 0xDE, 0xAD, 0xCA, 0xFE, 0xFA, 0xCE, 0xB0, 0x0C, 0xDE, 0xAD, 0xCA, 0xFE, 0xFA, 0xCE, 0xB0, 0x0C, 0x98, 0x80, 0xB0, 0xAB, 0x2B, 0xA2, 0x7B, 0x56, 0xF0, 0x6E, 0x6E, 0x0F, 0xB2, 0xA8, 0x10, 0xA7, 0xA4, 0x84, 0xFC, 0xE7, 0xED, 0xE8, 0xEA, 0x13, 0x0C, 0xC4, 0x48, 0xC9, 0x73, 0x60, 0xDC, 0x5D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0x18, 0x81, 0xE8, 0xE8, 0xF6, 0xD2, 0x2E, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34, 0xFF, 0xE3, 0xA8, 0x0A, 0x3A, 0xD1, 0xCE, 0x78, 0x91, 0xF9, 0xB1, 0x63, 0x6C, 0xFF, 0xFB, 0x48, 0x07, 0xE9, 0xF0, 0x86, 0x0B, 0xED, 0xEB, 0x9A, 0x2E, 0x3D, 0x97, 0x1B, 0xCD, 0x55, 0x8B, 0x03, 0x49, 0xD9, 0xE9, 0x40, 0xCE, 0x67, 0xB1, 0x08, 0x34, 0x0C, 0xBE, 0xBB, 0x0B, 0x15, 0x66, 0xF2, 0x8D, 0x4D, 0xF4, 0x73, 0x42, 0xE8, 0x48, 0x1C, 0xB4, 0x24, 0x03, 0xD4, 0xC2, 0xAD, 0xAA, 0x34 };
        internal static readonly byte[] ExpandKeyTable = new byte[] { 0xFB, 0x2B, 0x35, 0xF4, 0xC2, 0x91, 0x93, 0x27, 0x5D, 0x8B, 0xCD, 0xAE, 0xD0, 0x5D, 0xE7, 0x7D, 0x85, 0x7B, 0xE9, 0x36, 0x90, 0xC8, 0x64, 0x58, 0x6E, 0xAF, 0x51, 0x6A, 0x94, 0xA7, 0xA6, 0xF0, 0xF3, 0xC2, 0x2B, 0xC3, 0x2B, 0x7B, 0x9A, 0xA2, 0x55, 0xDF, 0x5A, 0x64, 0x64, 0xF1, 0xC3, 0xA2, 0x0A, 0x4E, 0xEF, 0xEC, 0x9A, 0x66, 0x58, 0x4E, 0x9F, 0xF3, 0x07, 0x6F, 0x39, 0xE0, 0x27, 0x62, 0x87, 0x16, 0x2A, 0xC7, 0x26, 0x70, 0x60, 0x8E, 0x35, 0xFD, 0x24, 0x76, 0x9E, 0x72, 0xE7, 0x71, 0xF6, 0x78, 0x60, 0x96, 0xDF, 0x02, 0x91, 0x2E, 0x38, 0xE5, 0x9A, 0x2C, 0xF8, 0xC6, 0x71, 0x63, 0x5B, 0x51, 0x00, 0x0D, 0x00, 0xCE, 0x73, 0x23, 0x22, 0x1F, 0x20, 0xAE, 0xB6, 0xCE, 0x67, 0xBA, 0x09, 0x04, 0x18, 0xBB, 0x56, 0xF0, 0xB1, 0x5A, 0xE4, 0x29, 0x10, 0x19, 0xDC, 0x2B, 0x70, 0x81, 0xE4, 0x09, 0xD7, 0x1E, 0x2C, 0xE9, 0x3E, 0x85, 0x07, 0x9C, 0x8F, 0x15, 0x1D, 0x69, 0x4A, 0xAB, 0x7A, 0xCA, 0xE6, 0x1E, 0xED, 0x41, 0x24, 0x6C, 0xEF, 0xCC, 0x01, 0xC3, 0xF4, 0x7E, 0xE6, 0xE1, 0xDF, 0x64, 0x5C, 0xC2, 0x9A, 0x48, 0x4D, 0xB7, 0xB3, 0xAD, 0xC1, 0x51, 0xB3, 0xB5, 0x18, 0x10, 0x2D, 0xC6, 0x9D, 0x1F, 0x99, 0x95, 0xF8, 0x89, 0x01, 0x1F, 0xEE, 0x69, 0xF8, 0xDF, 0x2C, 0x6A, 0xF5, 0xD9, 0xC4, 0x2F, 0xD2, 0xF3, 0x08, 0x1F, 0x52, 0x2F, 0x38, 0x2D, 0xD3, 0x0D, 0xEC, 0xFB, 0x33, 0xC9, 0x6C, 0x47, 0x85, 0x54, 0x70, 0x46, 0xC4, 0x53, 0xD4, 0xD1, 0x75, 0x1A, 0x1B, 0xFB, 0x0D, 0xDE, 0xC8, 0x2F, 0xB7, 0x65, 0xC5, 0x33, 0x67, 0x1E, 0x14, 0x5E, 0x32, 0x42, 0x3D, 0x9D, 0x08, 0x04, 0xBC, 0x53, 0x88, 0xD4, 0x17, 0xC5, 0x5B, 0xA6, 0xE4, 0x70, 0xC0, 0x56, 0x40, 0xF5, 0x55, 0x1B, 0xC8, 0x8C, 0xFD, 0xE8, 0xC4, 0x32, 0xDB, 0xBE, 0xDF, 0x46, 0xBC, 0x8F, 0x0C, 0x6D, 0x48, 0x72, 0xC4, 0x9E, 0x97, 0x12, 0x9F, 0x81, 0xDB, 0xB2, 0xCB, 0x69, 0x64, 0xB4, 0xF3, 0x43, 0x26, 0x56, 0x66, 0x4E, 0x21, 0x17, 0x45, 0x22, 0x2D, 0x6B, 0x17, 0xFA, 0xC6, 0x75, 0xF0, 0x32, 0xCC, 0xAF, 0x91, 0x85, 0x9E, 0xCE, 0x76, 0x05, 0x95, 0xE2, 0x96, 0x68, 0x58, 0x2D, 0x99, 0x6F, 0x0E, 0xCE, 0x34, 0xE2, 0x1A, 0x89, 0x62, 0xEB, 0xCA, 0xD2, 0x18, 0x44, 0x21, 0x77, 0xF6, 0x42, 0x43, 0x7A, 0xC2, 0x8B, 0xFF, 0xE6, 0x9C, 0xB9, 0x13, 0xA7, 0x71, 0x9B, 0x33, 0x46, 0xB8, 0x54, 0x30, 0x8B, 0x7F, 0x83, 0x5F, 0x84, 0x4D, 0x2F, 0x45, 0x2C, 0x3C, 0x43, 0x15, 0x9E, 0x89, 0xFB, 0x92, 0xFE, 0x43, 0xCE, 0xBD, 0x5B, 0x4A, 0x9F, 0xD7, 0x6D, 0x3F, 0xA7, 0xC1, 0x07, 0x33, 0x36, 0xE1, 0x30, 0x29, 0x3F, 0x1C, 0x8F, 0xA1, 0xC0, 0x7E, 0xC9, 0x93, 0x89, 0xDF, 0x6F, 0xEB, 0x35, 0x85, 0xF4, 0xA1, 0x79, 0x19, 0x3E, 0x57, 0x84, 0x43, 0x25, 0x02, 0x74, 0x38, 0x60, 0x37, 0xDF, 0xF7, 0xD3, 0x63, 0xCB, 0xAB, 0x1B, 0x8A, 0x90, 0xA8, 0x78, 0x15, 0xCF, 0x5F, 0x47, 0x7E, 0x82, 0xA0, 0x5B, 0xD0, 0xB9, 0x3D, 0x50, 0xD2, 0x7E, 0x24, 0x67, 0x6F, 0xC2, 0x2E, 0x33, 0xD6, 0x74, 0xAA, 0xDD, 0x9C, 0xB2, 0xB3, 0x64, 0xB4, 0x0E, 0xDC, 0x03, 0x43, 0x72, 0x10, 0x10, 0x3C, 0x2C, 0x07, 0x4C, 0xA6, 0x7A, 0xB3, 0x74, 0x23, 0xEE, 0x76, 0xDA, 0x27, 0xCC, 0x7F, 0xA2, 0x78, 0xA3, 0xFE, 0xDC, 0x3C, 0x2D, 0xF1, 0x33, 0x9F, 0xCB, 0xDA, 0x73, 0x48, 0x50, 0x05, 0xBD, 0x7C, 0x15, 0x8D, 0x5F, 0xD6, 0xF6, 0xD9, 0x06, 0x6E, 0x7B, 0x8E, 0x46, 0xE7, 0x5B, 0x7B, 0xEA, 0xE1, 0xEC, 0x80, 0xF4, 0x97, 0x79, 0xF8, 0xAC, 0x46, 0x86, 0x6C, 0x6A, 0x3F, 0xB0, 0x0F, 0x53, 0xD9, 0xF4, 0x9E, 0x8C, 0x51, 0x3D, 0xB7, 0xEA, 0xD4, 0x8F, 0x54, 0x6F, 0xC2, 0x87, 0x1C, 0x74, 0xAE, 0x45, 0xF7, 0x61, 0x41, 0x32, 0x57, 0xEE, 0x1F, 0x72, 0xD4, 0xEC, 0xA1, 0xC5, 0x4C, 0x76, 0xAD, 0x42, 0x85, 0x28, 0x81, 0xC2, 0x30, 0xF2, 0x85, 0x55, 0xEA, 0x3F, 0x74, 0xB1, 0x88, 0xCD, 0x2A, 0x69, 0xB6, 0x86, 0x51, 0xBE, 0xBD, 0x39, 0x35, 0x25, 0x51, 0x75, 0x91, 0xAA, 0x55, 0xF4, 0xCE, 0xDF, 0x97, 0xD6, 0x51, 0x90, 0x70, 0xEB, 0x96, 0x9C, 0x28, 0xAB, 0x1B, 0x66, 0x24, 0xDB, 0x2D, 0x8B, 0x8A, 0x13, 0x62, 0x29, 0xDD, 0x57, 0x04, 0x46, 0x9A, 0xE0, 0x2A, 0xAC, 0x47, 0x72, 0x3D, 0x9E, 0x50, 0x0D, 0x8D, 0x3D, 0xBD, 0xDC, 0xF1, 0x35, 0xDA, 0xDB, 0x2E, 0x9A, 0x46, 0x49, 0x6F, 0x85, 0x0C, 0x4A, 0xB2, 0x7B, 0x16, 0x4B, 0x68, 0x20, 0x66, 0x2B, 0xEB, 0xC6, 0x65, 0x1A, 0x10, 0x15, 0xD9, 0x73, 0x4D, 0xCB, 0xC8, 0x7D, 0xF7, 0x78, 0x1F, 0x0D, 0xB4, 0xF3, 0x87, 0x01, 0xCB, 0xCE, 0xA6, 0x17, 0x5C, 0xAF, 0x45, 0x08, 0xB6, 0x48, 0xD6, 0xE4, 0x0C, 0x70, 0x94, 0x1D, 0x74, 0x1F, 0xF2, 0x74, 0x5B, 0xDB, 0xD0, 0xB2, 0x9B, 0x13, 0x58, 0xE9, 0x5E, 0x47, 0x03, 0x63, 0xD7, 0xF9, 0xF4, 0xEF, 0x8F, 0x3E, 0x07, 0x8D, 0xFF, 0xAE, 0x24, 0x3A, 0x4F, 0x22, 0x46, 0x58, 0xA5, 0xAA, 0xA8, 0x35, 0xB1, 0x2B, 0x6D, 0x05, 0xD4, 0x66, 0xD2, 0xA4, 0x31, 0xB5, 0x87, 0x1F, 0x3C, 0xFA, 0xD0, 0x37, 0xEB, 0x15, 0x30, 0xB6, 0x9D, 0xFD, 0x1B, 0x64, 0x58, 0x39, 0x77, 0x3D, 0xE3, 0xCB, 0x9F, 0xB1, 0xD6, 0x4B, 0xC4, 0x75, 0x9C, 0x3E, 0x7C, 0x8F, 0x12, 0x27, 0x84, 0x69, 0xC0, 0x68, 0x6B, 0x2A, 0x72, 0x40, 0x93, 0xA2, 0x93, 0xA7, 0x05, 0x0B, 0xC2, 0x3F, 0x75, 0x18, 0xF6, 0x1E, 0xEE, 0xF1, 0x28, 0x9A, 0x35, 0xC2, 0xFF, 0xDD, 0x2C, 0x49, 0x7B, 0x5D, 0x05, 0x5F, 0xC3, 0xCF, 0xE1, 0xEA, 0x69, 0xE3, 0x34, 0x43, 0x43, 0x35, 0x64, 0x01, 0x3C, 0x9F, 0xCC, 0x8A, 0xA7, 0xFF, 0xF5, 0x65, 0xE7, 0xB7, 0x65, 0x50, 0xFC, 0x7F, 0x57, 0x5B, 0x7C, 0xFB, 0xC9, 0x5A, 0xE8, 0x6B, 0xA9, 0xE7, 0x64, 0x26, 0x3E, 0x52, 0x4B, 0x23, 0xD6, 0xC4, 0xA7, 0x40, 0xAB, 0x2B, 0x4D, 0x45, 0x09, 0xFA, 0xC4, 0x97, 0xBE, 0x45, 0xD2, 0x83, 0x78, 0x2A, 0xA0, 0xCB, 0x2A, 0x00, 0x9F, 0x13, 0x2A, 0x90, 0x7B, 0x9F, 0xA2, 0x99, 0x8B, 0x77, 0xC4, 0x87, 0xCE, 0xAE, 0x63, 0xE9, 0x76, 0x5F, 0xD8, 0xAF, 0xC1, 0xEF, 0x41, 0x37, 0x15, 0xA3, 0xCC, 0x46, 0xAF, 0xB0, 0x35, 0x74, 0x79, 0xA8, 0x97, 0x45, 0x34, 0x03, 0xA8, 0xAA, 0x67, 0xBD, 0x5E, 0x30, 0x20, 0x28, 0xA1, 0x96, 0x7E, 0xAA, 0xDD, 0xCF, 0x10, 0x6F, 0xE5, 0x51, 0x82, 0x27, 0x9B, 0xD7, 0xEB, 0x2F, 0x73, 0xB1, 0x27, 0x00, 0x5A, 0x20, 0xC8, 0x4A, 0x49, 0x43, 0x56, 0xC3, 0xBB, 0xB0, 0x8A, 0xBA, 0x4E, 0x38, 0x19, 0x48, 0x16, 0x81, 0x83, 0x0C, 0x7D, 0x36, 0x73, 0x6A, 0x34, 0x2B, 0x60, 0xB4, 0xDD, 0x8E, 0x7C, 0x2C, 0xE1, 0x94, 0x2E, 0x51, 0x74, 0x34, 0x9B, 0x70, 0xDF, 0xC4, 0x58, 0x2A, 0x2E, 0x16, 0x2F, 0xE2, 0x50, 0xCD, 0xE5, 0x2D, 0xD3, 0x71, 0xCC, 0xD9, 0xDE, 0x8A, 0x29, 0xCD, 0x03, 0x2E, 0x2A, 0xC5, 0xDA, 0x64, 0xCC, 0x39, 0xE7, 0x1C, 0x8A, 0xA1, 0xD0, 0xC5, 0x4A, 0xA4, 0xFB, 0xDB, 0xC0, 0x86, 0x19, 0x42, 0xA4, 0x1C, 0xB5, 0xE1, 0xCD, 0x19, 0x30, 0x0B, 0x5B, 0x89, 0x02, 0x9D, 0x67, 0x49, 0x16, 0x94, 0x5E, 0x92, 0x3E, 0x6E, 0x52, 0x65, 0xAC, 0x25, 0xDF, 0xAA, 0x79, 0x50, 0x74, 0xF9, 0x24, 0xA5, 0x23, 0x75, 0x2D, 0x79, 0xB8, 0x42, 0xE7, 0x6B, 0xD9, 0x93, 0x97, 0x9D, 0xAA, 0xE5, 0xD2, 0x8C, 0x1C, 0x19, 0x05, 0xDE, 0xFC, 0x0E, 0xBC, 0x23, 0x18, 0x93, 0x4E, 0x6E, 0x7D, 0x13, 0x7C, 0x0E, 0x88, 0x3A, 0x1C, 0x54, 0x08, 0x4D, 0x7F, 0x5D, 0x50, 0x73, 0x88, 0x92, 0x42, 0xED, 0x28, 0x1B, 0xFA, 0x35, 0xA2, 0x78, 0xAD, 0x50, 0x3C, 0x76, 0x6E, 0xD4, 0x59, 0x57, 0x83, 0x75, 0x08, 0x29, 0x47, 0x3B, 0x9A, 0xE7, 0x35, 0x36, 0x96, 0xB4, 0x5A, 0xA9, 0x7D, 0xAD, 0xAB, 0xBC, 0xE2, 0x2B, 0x88, 0xDF, 0x66, 0x02, 0xD9, 0x18, 0x50, 0x96, 0x1B, 0xB7, 0xAD, 0x2B, 0x51, 0x2C, 0xFB, 0xF6, 0xC9, 0xD1, 0x8E, 0xC4, 0x68, 0x70, 0x96, 0xE6, 0xAD, 0x06, 0xAD, 0x11, 0xC9, 0xC7, 0xEA, 0xDB, 0xBC, 0x7B, 0x0A, 0x69, 0xBF, 0xB5, 0x77, 0xF2, 0xED, 0xD8, 0x11, 0xCB, 0x7B, 0x19, 0xFC, 0x2F, 0x80, 0xB4, 0xA9, 0x41, 0x6B, 0x58, 0x46, 0x67, 0x51, 0xBA, 0x2A, 0xEE, 0x69, 0xA9, 0xFE, 0xE9, 0x2F, 0xB5, 0x88, 0xE1, 0xFF, 0xA4, 0x75, 0xC5, 0xC2, 0xBD, 0xC6, 0xBF, 0x6D, 0xA2, 0x79, 0x40, 0x8E, 0xF1, 0x26, 0x84, 0xC7, 0x8B, 0x83, 0xEF, 0x2E, 0x8B, 0x1F, 0xFC, 0x4A, 0xE0, 0x8C, 0x35, 0x83, 0x75, 0x50, 0x57, 0x99, 0x22, 0xA2, 0x32, 0xBB, 0x8C, 0xCE, 0x17, 0x28, 0xE3, 0x8C, 0x57, 0xAE, 0xBC, 0xD3, 0xC0, 0x87, 0xEF, 0x39, 0xC8, 0x9A, 0xEC, 0xCF, 0x22, 0x1A, 0x30, 0xCA, 0xAA, 0x67, 0x0B, 0x12, 0x5B, 0xFF, 0xBC, 0xF8, 0x60, 0xD1, 0x12, 0xB2, 0x37, 0x69, 0x75, 0x60, 0x14, 0xCC, 0x69, 0x3E, 0x03, 0x9D, 0xE1, 0x21, 0x18, 0x7A, 0x2A, 0xD6, 0x74, 0xB9, 0x7E, 0x53, 0x03, 0xEF, 0xAF, 0xE4, 0x58, 0x43, 0x1E, 0xC4, 0x6C, 0x22, 0x18, 0x9A, 0x60, 0x8A, 0x1F, 0xF8, 0xDB, 0xD7, 0x34, 0xBE, 0x0A, 0x13, 0x77, 0x75, 0x46, 0xDE, 0xED, 0x22, 0x60, 0x4A, 0xE0, 0xBB, 0x76, 0xB4, 0x05, 0x97, 0xCE, 0xB9, 0x3F, 0xE1, 0x5E, 0xFD, 0xFD, 0x1C, 0x5C, 0xE4, 0x46, 0x0F, 0x91, 0xF5, 0x3D, 0xFF, 0xCD, 0x26, 0x6B, 0xE4, 0x7C, 0xBC, 0x2E, 0x2C, 0xA2, 0x75, 0x17, 0xE2, 0x51, 0x49, 0x34, 0xAF, 0x07, 0x72, 0xF9, 0x78, 0xA6, 0x24, 0xFB, 0xE3, 0x8C, 0x43, 0x1B, 0x12, 0x8A, 0x5C, 0x42, 0xF1, 0xF9, 0x8F, 0xE5, 0x94, 0xA4, 0x2A, 0x36, 0xDB, 0x85, 0x60, 0x83, 0xFD, 0x4C, 0x30, 0x2E, 0x02, 0x64, 0x89, 0x88, 0x6D, 0xE9, 0x2F, 0x9E, 0x62, 0xAF, 0xA7, 0x5B, 0x3B, 0xDF, 0x08, 0x62, 0x01, 0x77, 0x1E, 0xD5, 0x1B, 0x0C, 0xC0, 0x26, 0x8C, 0x29, 0x22, 0xDD, 0x23, 0x41, 0x9B, 0x29, 0xEB, 0xB7, 0x76, 0x83, 0xBD, 0xAB, 0xC3, 0x49, 0x21, 0x7E, 0xFA, 0xA6, 0xB6, 0x86, 0x4F, 0xE3, 0x50, 0x45, 0x31, 0xD0, 0xD2, 0xDC, 0x17, 0x08, 0x07, 0xD2, 0x4D, 0x94, 0x02, 0xAA, 0xF4, 0x95, 0x10, 0x1E, 0xC5, 0xBB, 0xFC, 0x09, 0x65, 0x28, 0x17, 0x88, 0xE2, 0xCA, 0x2B, 0x51, 0x30, 0xCD, 0xCC, 0xE4, 0xA1, 0xED, 0x4C, 0x45, 0x32, 0x93, 0xCF, 0xB2, 0x76, 0xC9, 0xAB, 0x61, 0x6D, 0xAF, 0x4B, 0xA6, 0x59, 0x41, 0x16, 0x70, 0xC8, 0xB8, 0x37, 0xC2, 0xA2, 0xE6, 0x5A, 0x85, 0x0E, 0x93, 0xC2, 0x55, 0x95, 0x0C, 0x8A, 0x6D, 0x75, 0x0E, 0xD6, 0x22, 0x4A, 0xD4, 0x6F, 0xF3, 0x70, 0x82, 0xF0, 0x80, 0xFD, 0x8D, 0xF3, 0x97, 0x1F, 0xC0, 0x8C, 0x9F, 0x9E, 0x72, 0xF1, 0x6A, 0xAE, 0x14, 0x44, 0x0D, 0xE3, 0x75, 0x0D, 0x60, 0xEF, 0x8B, 0x27, 0xFE, 0xB3, 0x78, 0x35, 0x78, 0xBE, 0x29, 0x97, 0xBD, 0x61, 0x44, 0xC7, 0xC3, 0x01, 0x52, 0xAE, 0x1B, 0x76, 0xFB, 0x13, 0x57, 0x04, 0xF0, 0xEC, 0x87, 0xA9, 0xEF, 0xD2, 0x51, 0x94, 0x99, 0x57, 0xC1, 0x28, 0x6D, 0xE4, 0x1A, 0x27, 0x1B, 0xE6, 0xCE, 0x37, 0x36, 0xD0, 0x8E, 0xE2, 0x0F, 0xAB, 0x73, 0x81, 0x8D, 0x24, 0x3D, 0x45, 0x8C, 0x9B, 0xD0, 0xDC, 0x7B, 0xC8, 0x3E, 0x96, 0xAF, 0x35, 0x31, 0xBC, 0x7D, 0xA4, 0x7C, 0x46, 0xF8, 0xDB, 0x38, 0x38, 0xF3, 0x86, 0x4E, 0x42, 0xDF, 0xF6, 0x9E, 0xBF, 0x27, 0x77, 0xC6, 0xC6, 0x57, 0xB5, 0x61, 0x6E, 0x88, 0xF9, 0x71, 0x81, 0x4E, 0xB3, 0x12, 0xB9, 0x2F, 0x5D, 0x04, 0x08, 0x68, 0x82, 0x36, 0x29, 0x22, 0x29, 0x18, 0xB2, 0x02, 0x3A, 0x0E, 0xC9, 0x57, 0xDD, 0xF7, 0x32, 0x60, 0x35, 0x18, 0xC5, 0xFF, 0xFE, 0xEE, 0xC4, 0xC6, 0xD4, 0x90, 0x53, 0xBD, 0xA9, 0x5D, 0xEC, 0x64, 0xC5, 0xBA, 0xD2, 0xBC, 0x4E, 0x3E, 0x8C, 0xDE, 0x9A, 0x8B, 0x6D, 0x30, 0x47, 0xCE, 0xBC, 0x50, 0xCB, 0xB5, 0x72, 0xF8, 0xDE, 0x48, 0x8A, 0xDC, 0xEE, 0x9B, 0x5B, 0xC6, 0xB3, 0x7A, 0x4C, 0xEA, 0xAC, 0x08, 0x4C, 0x16, 0xE5, 0xEA, 0x74, 0xA5, 0xAF, 0xC7, 0x7B, 0x86, 0x9F, 0x41, 0x4B, 0xCA, 0xD8, 0x7A, 0x88, 0x33, 0x9C, 0x8C, 0xAF, 0x08, 0x68, 0xD6, 0x40, 0xA9, 0x0F, 0x8D, 0x8B, 0xE3, 0x53, 0x6D, 0xC9, 0x3E, 0x75, 0x2C, 0x4D, 0xD0, 0xDC, 0x75, 0x7F, 0x13, 0x57, 0x88, 0x93, 0xAE, 0xE7, 0xCB, 0x37, 0xB3, 0xAD, 0xE8, 0xF5, 0x10, 0x86, 0x68, 0xBF, 0x63, 0x5F, 0x8A, 0x86, 0xA6, 0xC8, 0x3C, 0x70, 0xE5, 0xD1, 0x45, 0x86, 0xA8, 0xA0, 0xED, 0x20, 0x82, 0xE5, 0x44, 0xB0, 0x56, 0xD1, 0xC3, 0xF7, 0x5A, 0x95, 0x93, 0xF1, 0xAC, 0x88, 0x09, 0xDB, 0x8A, 0xC0, 0x13, 0xA0, 0xE4, 0x97, 0x32, 0xB7, 0xFA, 0x6E, 0x78, 0x02, 0xC4, 0x12, 0x8F, 0x00, 0x92, 0xC2, 0x5D, 0x3C, 0xEE, 0x8F, 0x4D, 0x79, 0x62, 0x21, 0xBB, 0x8F, 0xE6, 0x0D, 0x83, 0x67, 0xF2, 0xB0, 0x5A, 0x13, 0xBD, 0xFA, 0x8A, 0xC4, 0x0C, 0x33, 0xAE, 0xB2, 0x8A, 0x83, 0x7F, 0x0A, 0xAE, 0x9C, 0xB5, 0x04, 0x22, 0x21, 0xDF, 0xCF, 0xD2, 0x74, 0xFA, 0x54, 0x3E, 0xD3, 0xA8, 0x24, 0xB7, 0x06, 0xC7, 0x21, 0xC0, 0x62, 0xEA, 0xD2, 0x15, 0x0A, 0x73, 0x96, 0x7B, 0x35, 0x5A, 0x49, 0x9B, 0x6B, 0x6B, 0xDB, 0xC2, 0x9B, 0x50, 0x7A, 0xE5, 0x9E, 0x9B, 0xD1, 0x25, 0x9A, 0xB4, 0xE9, 0xC1, 0xC9, 0x5E, 0x06, 0x1C, 0x2A, 0x8F, 0x67, 0xB0, 0x74, 0x44, 0x8A, 0xDE, 0x3D, 0x62, 0x56, 0x09, 0x5E, 0xE1, 0x17, 0x76, 0x57, 0x33, 0xFC, 0x9C, 0x7D, 0x07, 0x25, 0x44, 0xF0, 0x6D, 0xB6, 0xBE, 0xB2, 0x63, 0xB4, 0xE9, 0xDF, 0x3C, 0x08, 0x0C, 0xCE, 0xA4, 0xED, 0xE2, 0xFF, 0xA3, 0x99, 0x17, 0xD4, 0x2F, 0x7A, 0x29, 0xFD, 0x19, 0x9E, 0xCC, 0xC2, 0x49, 0x50, 0x44, 0x8E, 0xE1, 0x58, 0x7B, 0x50, 0xEB, 0xAC, 0xFB, 0x98, 0x16, 0x06, 0xC8, 0xF5, 0x96, 0xBA, 0x68, 0x7E, 0x49, 0x36, 0x9F, 0x2E, 0x95, 0x2B, 0xDD, 0x94, 0x2B, 0xE9, 0xF1, 0x98, 0x1E, 0xE1, 0x58, 0x47, 0x85, 0x49, 0x32, 0xC3, 0x52, 0xC5, 0x92, 0x6F, 0x56, 0x84, 0x06, 0x07, 0x5A, 0x21, 0x98, 0x16, 0x01, 0x35, 0xF1, 0xA8, 0xA0, 0x09, 0x1A, 0x80, 0x98, 0xA6, 0x3D, 0x7F, 0x73, 0x13, 0x75, 0x24, 0x96, 0x24, 0x31, 0xBC, 0xF4, 0xB2, 0x1A, 0x30, 0x43, 0x80, 0xD9, 0x19, 0xF6, 0xD5, 0x01, 0x39, 0x5D, 0xBC, 0x5C, 0x27, 0x6B, 0x08, 0x79, 0x1D, 0xD2, 0x1A, 0xAC, 0xAA, 0xC5, 0x74, 0xFF, 0x04, 0xFB, 0xEC, 0xFF, 0xEB, 0xCF, 0xFE, 0x8C, 0xA3, 0xF0, 0x0A, 0x0A, 0x15, 0x7A, 0xEE, 0xC9, 0x2C, 0x98, 0xC3, 0x01, 0x22, 0xC4, 0xAA, 0xB4, 0xFB, 0xBA, 0x50, 0xD6, 0x0C, 0x0E, 0xFD, 0x2A, 0x31, 0x1A, 0x1E, 0x26, 0x87, 0x40, 0x92, 0x31, 0x43, 0x9D, 0x95, 0x40, 0x02, 0x22, 0xEF, 0x09, 0x99, 0x59, 0xC6, 0x40, 0xB9, 0xA4, 0x1F, 0x52, 0xCF, 0xED, 0x1A, 0xAE, 0x78, 0xB7, 0xA4, 0xF6, 0xE2, 0x83, 0xE2, 0x52, 0x9A, 0x70, 0x20, 0x0C, 0x3F, 0x65, 0x80, 0x7A, 0xD2, 0x8B, 0xDD, 0xF4, 0x98, 0xBA, 0x66, 0x7C, 0x54, 0x93, 0xB7, 0x1B, 0xDF, 0x83, 0x28, 0xE7, 0xD4, 0x4A, 0x25, 0xAE, 0xFB, 0x60, 0x4C, 0x28, 0xA9, 0x77, 0x9D, 0xAD, 0x4C, 0x82, 0xBA, 0x29, 0x06, 0x81, 0xD8, 0x80, 0x56, 0x1B, 0xAD, 0xEA, 0x0C, 0xBA, 0xA5, 0x2F, 0x5E, 0xFD, 0xF4, 0x62, 0x14, 0x33, 0x3E, 0xF7, 0xBE, 0x96, 0xBC, 0xA2, 0x32, 0x60, 0x72, 0x69, 0xA9, 0x96, 0x0D, 0x67, 0x49, 0x3E, 0xC0, 0xF6, 0x49, 0xEF, 0xC8, 0xA7, 0xD1, 0x6B, 0xFF, 0xEF, 0x67, 0x0D, 0x1A, 0x82, 0x19, 0x70, 0x3A, 0x1E, 0x45, 0xC6, 0x2B, 0x40, 0x1E, 0x14, 0x77, 0x7B, 0x4C, 0x62, 0xA1, 0xDB, 0xD3, 0x36, 0x05, 0x3E, 0xEB, 0xE5, 0x6D, 0x92, 0xEC, 0x7E, 0xCF, 0x24, 0xD3, 0x6B, 0x69, 0x69, 0xCB, 0x1E, 0xC6, 0xDF, 0x31, 0x31, 0x76, 0x8C, 0xE4, 0xFA, 0x11, 0x7A, 0xFC, 0xE7, 0x4C, 0x18, 0x66, 0x58, 0x81, 0xF9, 0xA4, 0x23, 0xB3, 0x02, 0x5A, 0xEF, 0x02, 0x07, 0xC9, 0xDB, 0x5F, 0x43, 0x75, 0x86, 0x70, 0x56, 0x16, 0x7B, 0xE9, 0x4F, 0x18, 0xB5, 0x4F, 0x36, 0x7C, 0x44, 0xC4, 0x0A, 0x26, 0x71, 0x2C, 0x5A, 0x17, 0x09, 0x22, 0x8D, 0x1C, 0xFF, 0x74, 0xDF, 0x77, 0x24, 0x3D, 0x4F, 0x93, 0x49, 0xF9, 0x72, 0x95, 0x9D, 0xBA, 0x17, 0x3D, 0xAB, 0x12, 0xC5, 0xAC, 0x1B, 0x61, 0x0D, 0xDC, 0xA7, 0xEB, 0x82, 0x3F, 0xA8, 0xCF, 0x8B, 0xEB, 0xC5, 0x40, 0xB4, 0xCC, 0x5C, 0x26, 0xF0, 0xD3, 0x2E, 0x65, 0x8B, 0x39, 0x2F, 0x63, 0x9F, 0x57, 0x6D, 0x93, 0x49, 0x6D, 0x6A, 0xE5, 0x99, 0xEB, 0xCA, 0x3E, 0x8E, 0x2F, 0x82, 0x8F, 0xD8, 0x96, 0x20, 0x3D, 0x74, 0x95, 0x5B, 0x12, 0x13, 0x18, 0xA6, 0xC7, 0xA5, 0xAC, 0x25, 0x38, 0x9E, 0x52, 0xCF, 0xDD, 0xD1, 0xB3, 0x34, 0xEB, 0xE0, 0x2F, 0xA0, 0x4F, 0xDD, 0x18, 0x4C, 0xD5, 0xE5, 0x16, 0xDC, 0x08, 0x56, 0xBF, 0x48, 0x15, 0x44, 0xBF, 0x24, 0x66, 0xD7, 0x7E, 0xBB, 0xBC, 0xC0, 0x8D, 0x2E, 0xDD, 0xE5, 0xB8, 0xE0, 0xAE, 0x5A, 0x50, 0x8E, 0x19, 0x4B, 0x28, 0x3A, 0x09, 0x4F, 0xBF, 0xD9, 0xCB, 0x10, 0xB5, 0x93, 0x1E, 0x43, 0xCF, 0x53, 0x92, 0xD9, 0x48, 0xB7, 0xAB, 0x4E, 0xB7, 0x1A, 0x80, 0x84, 0x6F, 0xDC, 0xB9, 0x2B, 0xEF, 0xF5, 0x46, 0x15, 0x3A, 0x7C, 0x87, 0xC1, 0x2D, 0xCA, 0x1E, 0x45, 0x96, 0xB7, 0x48, 0x94, 0xDA, 0x8C, 0xED, 0x87, 0xC3, 0xF4, 0x5A, 0x37, 0x50, 0xA1, 0xB7, 0x79, 0x45, 0xD6, 0x33, 0x21, 0xD2, 0x8E, 0xCB, 0x2C, 0xD7, 0xE3, 0x2E, 0x0C, 0x5D, 0x4C, 0x79, 0x46, 0xBC, 0x36, 0x87, 0x8E, 0xE0, 0xCB, 0xFD, 0x96, 0x66, 0xE7, 0xDE, 0x86, 0x4B, 0x6B, 0x69, 0x7A, 0xE1, 0x3E, 0xBC, 0x2F, 0x51, 0x33, 0x8E, 0x20, 0xD1, 0x07, 0x92, 0x68, 0xE2, 0x7A, 0x03, 0x4C, 0x19, 0xB8, 0x06, 0x13, 0x2A, 0x0C, 0x47, 0xE1, 0x80, 0x9D, 0xB0, 0xD7, 0x25, 0x81, 0x95, 0x3E, 0xEC, 0x13, 0x04, 0x30, 0xF8, 0xF8, 0x3F, 0xCC, 0xB7, 0xE9, 0x95, 0x31, 0x89, 0x80, 0x01, 0x3F, 0xE2, 0x88, 0xAD, 0x9F, 0xF4, 0x2D, 0x51, 0xEC, 0x57, 0x46, 0xD7, 0xF4 };

        internal static readonly ulong ConstKeySeed = 0x567BA22BABB08098;
        internal static readonly byte[] InitialKey = new byte[] { 0xE3, 0xFC, 0x2D, 0x26, 0x9C, 0xC5, 0xA2, 0xEC, 0xD3, 0xF8, 0xC6, 0xD3, 0x77, 0xC2, 0x49, 0xB9 };
        internal static readonly byte[] IndexScramble = new byte[] { 0x0, 0xD, 0xA, 0x7, 0x4, 0x1, 0xE, 0xB, 0x8, 0x5, 0x2, 0xF, 0xC, 0x9, 0x6, 0x3 };

        internal static readonly byte[] Mhy0Table1 = new byte[] { 0x01, 0x03, 0x05, 0x0F, 0x11, 0x33, 0x55, 0xFF, 0x1A, 0x2E, 0x72, 0x96, 0xA1, 0xF8, 0x13, 0x35, 0x5F, 0xE1, 0x38, 0x48, 0xD8, 0x73, 0x95, 0xA4, 0xF7, 0x02, 0x06, 0x0A, 0x1E, 0x22, 0x66, 0xAA, 0xE5, 0x34, 0x5C, 0xE4, 0x37, 0x59, 0xEB, 0x26, 0x6A, 0xBE, 0xD9, 0x70, 0x90, 0xAB, 0xE6, 0x31, 0x53, 0xF5, 0x04, 0x0C, 0x14, 0x3C, 0x44, 0xCC, 0x4F, 0xD1, 0x68, 0xB8, 0xD3, 0x6E, 0xB2, 0xCD, 0x4C, 0xD4, 0x67, 0xA9, 0xE0, 0x3B, 0x4D, 0xD7, 0x62, 0xA6, 0xF1, 0x08, 0x18, 0x28, 0x78, 0x88, 0x83, 0x9E, 0xB9, 0xD0, 0x6B, 0xBD, 0xDC, 0x7F, 0x81, 0x98, 0xB3, 0xCE, 0x49, 0xDB, 0x76, 0x9A, 0xB5, 0xC4, 0x57, 0xF9, 0x10, 0x30, 0x50, 0xF0, 0x0B, 0x1D, 0x27, 0x69, 0xBB, 0xD6, 0x61, 0xA3, 0xFE, 0x19, 0x2B, 0x7D, 0x87, 0x92, 0xAD, 0xEC, 0x2F, 0x71, 0x93, 0xAE, 0xE9, 0x20, 0x60, 0xA0, 0xFB, 0x16, 0x3A, 0x4E, 0xD2, 0x6D, 0xB7, 0xC2, 0x5D, 0xE7, 0x32, 0x56, 0xFA, 0x15, 0x3F, 0x41, 0xC3, 0x5E, 0xE2, 0x3D, 0x47, 0xC9, 0x40, 0xC0, 0x5B, 0xED, 0x2C, 0x74, 0x9C, 0xBF, 0xDA, 0x75, 0x9F, 0xBA, 0xD5, 0x64, 0xAC, 0xEF, 0x2A, 0x7E, 0x82, 0x9D, 0xBC, 0xDF, 0x7A, 0x8E, 0x89, 0x80, 0x9B, 0xB6, 0xC1, 0x58, 0xE8, 0x23, 0x65, 0xAF, 0xEA, 0x25, 0x6F, 0xB1, 0xC8, 0x43, 0xC5, 0x54, 0xFC, 0x1F, 0x21, 0x63, 0xA5, 0xF4, 0x07, 0x09, 0x1B, 0x2D, 0x77, 0x99, 0xB0, 0xCB, 0x46, 0xCA, 0x45, 0xCF, 0x4A, 0xDE, 0x79, 0x8B, 0x86, 0x91, 0xA8, 0xE3, 0x3E, 0x42, 0xC6, 0x51, 0xF3, 0x0E, 0x12, 0x36, 0x5A, 0xEE, 0x29, 0x7B, 0x8D, 0x8C, 0x8F, 0x8A, 0x85, 0x94, 0xA7, 0xF2, 0x0D, 0x17, 0x39, 0x4B, 0xDD, 0x7C, 0x84, 0x97, 0xA2, 0xFD, 0x1C, 0x24, 0x6C, 0xB4, 0xC7, 0x52, 0xF6, 0xC5 };
        internal static readonly byte[] Mhy0Table2 = new byte[] { 0x3E, 0x00, 0x19, 0x01, 0x32, 0x02, 0x1A, 0xC6, 0x4B, 0xC7, 0x1B, 0x68, 0x33, 0xEE, 0xDF, 0x03, 0x64, 0x04, 0xE0, 0x0E, 0x34, 0x8D, 0x81, 0xEF, 0x4C, 0x71, 0x08, 0xC8, 0xF8, 0x69, 0x1C, 0xC1, 0x7D, 0xC2, 0x1D, 0xB5, 0xF9, 0xB9, 0x27, 0x6A, 0x4D, 0xE4, 0xA6, 0x72, 0x9A, 0xC9, 0x09, 0x78, 0x65, 0x2F, 0x8A, 0x05, 0x21, 0x0F, 0xE1, 0x24, 0x12, 0xF0, 0x82, 0x45, 0x35, 0x93, 0xDA, 0x8E, 0x96, 0x8F, 0xDB, 0xBD, 0x36, 0xD0, 0xCE, 0x94, 0x13, 0x5C, 0xD2, 0xF1, 0x40, 0x46, 0x83, 0x38, 0x66, 0xDD, 0xFD, 0x30, 0xBF, 0x06, 0x8B, 0x62, 0xB3, 0x25, 0xE2, 0x98, 0x22, 0x88, 0x91, 0x10, 0x7E, 0x6E, 0x48, 0xC3, 0xA3, 0xB6, 0x1E, 0x42, 0x3A, 0x6B, 0x28, 0x54, 0xFA, 0x85, 0x3D, 0xBA, 0x2B, 0x79, 0x0A, 0x15, 0x9B, 0x9F, 0x5E, 0xCA, 0x4E, 0xD4, 0xAC, 0xE5, 0xF3, 0x73, 0xA7, 0x57, 0xAF, 0x58, 0xA8, 0x50, 0xF4, 0xEA, 0xD6, 0x74, 0x4F, 0xAE, 0xE9, 0xD5, 0xE7, 0xE6, 0xAD, 0xE8, 0x2C, 0xD7, 0x75, 0x7A, 0xEB, 0x16, 0x0B, 0xF5, 0x59, 0xCB, 0x5F, 0xB0, 0x9C, 0xA9, 0x51, 0xA0, 0x7F, 0x0C, 0xF6, 0x6F, 0x17, 0xC4, 0x49, 0xEC, 0xD8, 0x43, 0x1F, 0x2D, 0xA4, 0x76, 0x7B, 0xB7, 0xCC, 0xBB, 0x3E, 0x5A, 0xFB, 0x60, 0xB1, 0x86, 0x3B, 0x52, 0xA1, 0x6C, 0xAA, 0x55, 0x29, 0x9D, 0x97, 0xB2, 0x87, 0x90, 0x61, 0xBE, 0xDC, 0xFC, 0xBC, 0x95, 0xCF, 0xCD, 0x37, 0x3F, 0x5B, 0xD1, 0x53, 0x39, 0x84, 0x3C, 0x41, 0xA2, 0x6D, 0x47, 0x14, 0x2A, 0x9E, 0x5D, 0x56, 0xF2, 0xD3, 0xAB, 0x44, 0x11, 0x92, 0xD9, 0x23, 0x20, 0x2E, 0x89, 0xB4, 0x7C, 0xB8, 0x26, 0x77, 0x99, 0xE3, 0xA5, 0x67, 0x4A, 0xED, 0xDE, 0xC5, 0x31, 0xFE, 0x18, 0x0D, 0x63, 0x8C, 0x80, 0xC0, 0xF7, 0x70, 0x07 };
        internal static readonly byte[] Mhy0IndexScramble = new byte[] { 0x0B, 0x02, 0x08, 0x0C, 0x01, 0x05, 0x00, 0x0F, 0x06, 0x07, 0x09, 0x03, 0x0D, 0x04, 0x0E, 0x0A, 0x04, 0x05, 0x07, 0x0A, 0x02, 0x0F, 0x0B, 0x08, 0x0E, 0x0D, 0x09, 0x06, 0x0C, 0x03, 0x00, 0x01, 0x08, 0x00, 0x0C, 0x06, 0x04, 0x0B, 0x07, 0x09, 0x05, 0x03, 0x0F, 0x01, 0x0D, 0x0A, 0x02, 0x0E };
        internal static readonly byte[] Mhy0ConstKey = new byte[] { 0x48, 0x14, 0x36, 0xED, 0x8E, 0x44, 0x5B, 0xB6 };
        internal static readonly byte[] Mhy0ConstKey1 = new byte[] { 0xA7, 0x99, 0x66, 0x50, 0xB9, 0x2D, 0xF0, 0x78 };

        internal static readonly uint[] MagicTable0 = new uint[] { 0x57B57048, 0x5477C567, 0xC4B69303, 0x914CA323, 0xCC792F22, 0xF6571906, 0xAC4A7EB5, 0x94116752, 0x52E8B439, 0xF17FF2B4, 0x96644891, 0x225E86EC, 0xFBC56156, 0xD0D9AEDC, 0x8756B13F, 0x88B1E6AC, 0x4E4835C7, 0x60093E3C, 0x9F1C6E5C, 0xE6D27A44, 0x0567ABDA, 0x15E2C898, 0xA485C294, 0xC1EB5772, 0xE04D0B1A, 0x928E160C, 0xEC68E9A6, 0xDD4BD68C, 0x2A913ACD, 0xD433F041, 0x2E7B6450, 0x43DA4D97, 0x6D9B466C, 0x7F6B0AED, 0x6C2CDC80, 0xDA633D3E, 0xB15D65A7, 0x10BF0CE9, 0x61BEA4D0, 0xB3284A64, 0x1F585B7A, 0x85239EFC, 0x6721D58E, 0x426DD77B, 0xE765E0A8, 0x83BCEFA2, 0x1BB205E7, 0x93398CE0, 0x5F7ACC69, 0x1EEFC196, 0x807E5A8D, 0xB0EAFF4B, 0x24C1F7B2, 0xE510CF6B, 0x509D9BFA, 0x2DB9D17F, 0x003A6FAB, 0x04D03136, 0x9D69419F, 0xA21AB3CA, 0xF595AC29, 0xB5B73B3A, 0xBD78871B, 0x5B9092F4, 0x2C0E4B93, 0x95A6FDBE, 0xF7E083EA, 0xA6F0ED57, 0xCAE65E7C, 0xD2AC811F, 0x1870B0C8, 0x8DEC22DD, 0x9A41AA2D, 0xA74777BB, 0x35F30E1C, 0x72F972BD, 0x3EFE0712, 0xADFDE459, 0x018DF547, 0x5602EAA4, 0xFE98A527, 0x3A14598F, 0xA917BAC4, 0x41AF6254, 0xB29FD088, 0x024F4068, 0x68C6821D, 0xF807D479, 0x23E91C00, 0x90FB39CF, 0xCB51C490, 0x708C5D7E, 0xBA506CA9, 0x8F990D1E, 0x3F499DFE, 0xDCFC4C60, 0x4018F8B8, 0xEE1DC665, 0xCE0C00E1, 0x07128419, 0x84940410, 0x4FFFAF2B, 0xAB629507, 0x4960DE75, 0xFCED8AE4, 0x512A0116, 0x19C72A24, 0x202BA92F, 0x63CB8B13, 0x26B4D871, 0xD646DF82, 0x3D3CB23D, 0xB6758E15, 0x08F5D38A, 0xD5846AAD, 0x99831F02, 0x48D74499, 0xA5325878, 0x6E59F343, 0x11089605, 0x0DA817FB, 0xE23824D9, 0x44F2A625, 0x1A059F0B, 0x0C1F8D17, 0xAAD50FEB, 0xBEBA3234, 0xCFBB9A0D, 0x820B754E, 0x4B15F1B6, 0xBCCF1DF7, 0xFA72FBBA, 0x983485EE, 0xBBE7F645, 0xC229E25D, 0x336C7F42, 0x713BC792, 0xDBD4A7D2, 0x6FEE69AF, 0x64E360A1, 0xCDCEB5CE, 0x1797E75B, 0x4730130A, 0x2703429D, 0x7A36CE9C, 0xFF2F3FCB, 0x16207DB7, 0x6AB3ADDE, 0x4C3D1A04, 0xF42236C5, 0xEB400214, 0xD7F1456E, 0x6B043732, 0x9EABF4B0, 0xFD5A1008, 0x25766D5E, 0xC39E78B1, 0x1D2D74B9, 0xDF3EF94F, 0xE882B73B, 0xC05CCD9E, 0xC6C3BCC0, 0xF9B04E95, 0x31195081, 0xC89371BF, 0x2FCCFEBC, 0x219C33C3, 0xA3AD2926, 0xE38FBE35, 0x0A80FC49, 0x9CDEDB73, 0x6554FA4D, 0xC50109EF, 0xEFAA5C89, 0x59E5BD37, 0xF2BD479B, 0xB992D986, 0x7B815470, 0xAE3F5176, 0xB400A1D6, 0x3C8B28D1, 0xA06F9C09, 0x697118F1, 0x7CA9BFC2, 0x0E6AA2D4, 0xF30ADD77, 0x06A51EF5, 0xAF88CB9A, 0x627C11FF, 0x79F47BB3, 0x0FDD3838, 0xE1FA91F6, 0xDE8963A3, 0xC924EB53, 0xD31B1BF3, 0xD16E3430, 0xA8A02028, 0x3631BB33, 0x378621DF, 0xC774262C, 0x30AECA6D, 0xA1D806E5, 0xB7C214F9, 0x12CA232A, 0x4D8A80E8, 0xF0C86858, 0x09424966, 0x28E4150E, 0x8AC4C96F, 0x4AA26B5A, 0x535F2ED5, 0xD81612FD, 0xE4A75587, 0x1C9AEE55, 0xBF0DA8D8, 0x7843E15F, 0x03F8DA84, 0x5A270818, 0x746603E3, 0x29538FE2, 0x5D0FE3AA, 0x55C05F8B, 0x344494F0, 0x14555274, 0x8B735383, 0x7D1E252E, 0x89067C40, 0x8E2E97F2, 0xE9352DD7, 0x32DBE5AE, 0xEAF798F8, 0x3BA3C363, 0x5ECD5685, 0x3861764C, 0x7EDC9001, 0xB825436A, 0xEDDF734A, 0x5CB87946, 0x137DB9C6, 0x81C9C061, 0x86E12BD3, 0x39D6ECA0, 0x2B26A021, 0x585227DB, 0x75D1990F, 0x0B3766A5, 0x8C5BB831, 0x468789E6, 0x76132C20, 0xD9A18811, 0x9BF630C1, 0x97D3D27D, 0x66964F62, 0x77A4B6CC, 0x734EE851, 0x45453CC9 };
        internal static readonly uint[] MagicTable1 = new uint[] { 0xA0E6D549, 0x6253FA4A, 0xA3059EDA, 0x5935BE8F, 0x6CB9BFD2, 0x428F9BE8, 0x5FE828B2, 0x04F1CF8A, 0xFD22A44C, 0x6A6429EF, 0x71DE0C88, 0x4B10713C, 0xD0F7CBE5, 0xCC3841CE, 0x4327A299, 0xA4703196, 0x5DA35A50, 0x1CA8A17E, 0x09F8C181, 0xC7ECD9F8, 0x723D471B, 0xF75E050B, 0x905409BA, 0xFEC1EFDF, 0x589D87FE, 0x9B80918C, 0x7D7F3BF2, 0x5E4011C3, 0x84AC5034, 0x2666DCCA, 0x6EF2CD30, 0xCFDB0A5D, 0x8ED0F173, 0x7E9C7061, 0x394A1D72, 0x76ABA3C4, 0x48F33AAF, 0xAA9A740E, 0xAB324D7F, 0x3DDCF9AD, 0x4DCDE701, 0x3608619B, 0x34431379, 0x7841E65C, 0x707635F9, 0xA9793F9D, 0xA7937A05, 0x2C1A7D8D, 0x6F5AF441, 0xFA570B00, 0x6BCC109E, 0xFF69D6AE, 0xD4612F3A, 0x0559F6FB, 0x880D674E, 0xAC47E233, 0x2FF9361E, 0xC5A7AB1A, 0x7CD70283, 0x0F2557BC, 0x803AB4EB, 0xA2ADA7AB, 0x6D1186A3, 0x85046945, 0x1BDD0E32, 0xB36B238B, 0xF51577E9, 0xE57BCAB8, 0xF3C8E1D4, 0xB91782CC, 0x65265506, 0xF9B44093, 0x543CB084, 0x52E126B9, 0xE698812B, 0xECE4206C, 0xEB918F20, 0xE872C4B3, 0x9863DA1F, 0x177C3948, 0x8D33BAE0, 0x01CF1224, 0x022C59B7, 0xBAF4C95F, 0x8A4615AC, 0x5AD6F51C, 0xD3148076, 0x1242E4E6, 0xFC8A9D3D, 0xEEAF528E, 0x44520DD5, 0x99CBE36E, 0x45FA34A4, 0x8C9B8391, 0x5C0B6321, 0xE9DAFDC2, 0x0D6E255E, 0x0850F8F0, 0x19967CD0, 0x07128419, 0x81928D9A, 0xEA39B651, 0x77039AB5, 0x7548E857, 0xF81C79E2, 0x3F978B4F, 0xD2BCB907, 0x3E3FB23E, 0xDE1D8E7D, 0xA14EEC38, 0x53491FC8, 0x2924A023, 0x601888A8, 0xE0451716, 0x91FC30CB, 0x96899F87, 0xC2D20456, 0x27CEE5BB, 0x4C65DE70, 0x1D00980F, 0xBD816613, 0x2DB244FC, 0xE730B85A, 0x10099604, 0x0A1B8A12, 0xC09976B4, 0xAFA4A9A0, 0xAE0C90D1, 0x1EE3D39C, 0x00672B55, 0xDA8B6AA2, 0x676D27E4, 0x21137386, 0xF260D8A5, 0x3C74C0DC, 0x79E9DF2D, 0x2E510F6F, 0xC1314FC5, 0xFBFF3271, 0xF6F63C7A, 0xDB2353D3, 0x8271C609, 0x25859759, 0x16D40039, 0x23580164, 0x3AA956E1, 0x35EB2A08, 0xA63B4374, 0x288C9952, 0x37A058EA, 0x559489F5, 0xE4D3F3C9, 0x11A1AF75, 0xBE622D80, 0x4F8695E3, 0x63FBC33B, 0x8BEE2CDD, 0x38E22403, 0x2B6FD2C1, 0x9721A6F6, 0x495B03DE, 0xD62A5DD8, 0xA5D808E7, 0x0CC61C2F, 0x86E722D6, 0xD9682131, 0x89A55E3F, 0xB8BFBBBD, 0x9A28A8FD, 0x956AD414, 0xCB4DEE82, 0x416CD07B, 0x149F72DB, 0xBFCA14F1, 0xF02BAA47, 0xA8D106EC, 0x874F1BA7, 0x94C2ED65, 0x2AC7EBB0, 0x15374BAA, 0x9EBE4C22, 0x7A0A94BE, 0x648E6C77, 0xBC295F62, 0x7F344910, 0x1F4BEAED, 0xB0886818, 0x9D5D07B1, 0x6987627C, 0xE1ED2E67, 0xC8AEA511, 0xEF076BFF, 0x9CF53EC0, 0x317DCED7, 0x0E8D6ECD, 0x7BA2ADCF, 0xB5B6B5B6, 0x242DAE28, 0x93B74229, 0x61B0B1D9, 0xBB5CF02E, 0xCD9078BF, 0xD78264A9, 0xDFB5B70C, 0x9F167553, 0xDDFEC5EE, 0x57DFFB17, 0xF1839336, 0xD15FF294, 0xB7FDC754, 0x4AB8484D, 0x038460C6, 0xB2C31AFA, 0x8F78C802, 0x183E45A1, 0x5677C266, 0xED4C191D, 0x329E8544, 0x73957E6A, 0x46197F37, 0x1A753743, 0xD5C9164B, 0x51026D2A, 0x40C4E90A, 0x66C51E95, 0x0BB3B363, 0x13EADD97, 0x3B016F90, 0x20BB4AF7, 0xCE73332C, 0xE20E65F4, 0xB655FE25, 0xD8C01840, 0x74E0D126, 0xC9069C60, 0x30D5F7A6, 0xCAE5D7F3, 0xADEFDB42, 0x682F5B0D, 0xDC56FC9F, 0xF4BD4E98, 0xC37A3D27, 0x3336BC35, 0x47B14646, 0xC40F926B, 0x22F03815, 0x4E2EAC92, 0x921F7B58, 0x06BABD68, 0xB41E8CC7, 0xE3A65C85, 0xC644E089, 0x83D9FF78, 0xB1205169, 0x5B7ECC6D, 0x50AA545B };
        internal static readonly uint[] MagicTable2 = new uint[] { 0xF343D4BE, 0x466CD77C, 0x100847BD, 0x20281247, 0xAC294F72, 0x9A0D755C, 0xFDBE2F41, 0xE459171A, 0x3732D1E3, 0x71BF7274, 0xCB9A156F, 0x05E7A155, 0xE25D78CE, 0x2DD753D2, 0x3234045D, 0x65A70BBA, 0xB6CCCD43, 0xBD37E302, 0xED571C17, 0xF94F65D9, 0x28D1866C, 0x4B9396E9, 0x419F278E, 0xD47942E0, 0x88116346, 0x95071185, 0x6AAD6F63, 0x55875E40, 0xB9C6A99A, 0x734A5738, 0xE75BAD70, 0xCE9CC0D1, 0xC567EE90, 0x89E6FC60, 0x5F8BEF27, 0xBE355968, 0xE6AC3256, 0x8FE293B4, 0x27DBE2B5, 0xC96F3023, 0xD8719C53, 0x1DF70628, 0x5685E42A, 0x5470C166, 0x63A3646E, 0x6CA900B7, 0x86EC98B9, 0x0FEB1032, 0x4F62DC71, 0x429D9DE4, 0xD9860375, 0x7C4033E1, 0x74B9A7CA, 0x4C60661B, 0x18F1D396, 0x5274AEB2, 0xECA08331, 0xB23D87DB, 0xC2941E62, 0x30C12111, 0x2F22769E, 0xB83136BC, 0x04103E73, 0x11FFD89B, 0xC898AF05, 0x7EB516AD, 0x00E174EB, 0x6E5C25FB, 0xDD7749ED, 0x021451A7, 0x33C39B7B, 0xA1D60EE7, 0x2926194A, 0xF4B0244C, 0x8D17B6F8, 0xF1B6F1F2, 0x8419BDF5, 0x67522EF6, 0x764C8286, 0x69AFD509, 0x262C7D93, 0xDA84B91F, 0x39CF2A1C, 0xE15FC2A4, 0x53833194, 0xC3638144, 0x0116EBCD, 0x57727B0C, 0x9F0BA0E2, 0xBAC413F0, 0x479B485A, 0xDE75F387, 0xEFA2395B, 0x8E150C92, 0x1EF5BC42, 0xCF6B5FF7, 0x7BB3C313, 0x456E6D16, 0x83EA4D07, 0x07128419, 0x871B079F, 0x2C20CCF4, 0x160C2869, 0x5D7ECA6B, 0x09EF7FE6, 0x821DD221, 0xA92F9ACC, 0x2A24A320, 0x0818E0C0, 0x5B7AA5BF, 0x5C89554D, 0x3136BE37, 0x0D1E357E, 0x50818BFE, 0xE9A6568F, 0x9C091A88, 0xC792CBDC, 0xDB732639, 0x7048ED52, 0x150E9203, 0x94F08EA3, 0xA7D26133, 0x252EC7F9, 0x1C00990E, 0x0E1C8F14, 0x8CE029DE, 0xB13F3DB1, 0x19064CB0, 0xF6450100, 0x72BDC81E, 0x9EFC3FC4, 0x78B17979, 0x06E51B3F, 0x754E38EC, 0x61564122, 0xFC49B067, 0x4499F230, 0x24D958DF, 0xEAA4ECE5, 0xE3AAE7E8, 0x36C54EC5, 0x6450949C, 0x9001C43B, 0xC196A408, 0x4D97F93D, 0xBCC07C24, 0xFEBC952B, 0x2ED5E9B8, 0x990FCF36, 0xB5CE7729, 0x811F684B, 0xC66554FA, 0xB439E80F, 0x77BB1DA0, 0x93037E51, 0xEE55A67D, 0xFBBA4095, 0xF7B29E26, 0x7A445C35, 0x34306B89, 0x4E954357, 0x3FCB45C8, 0xCD9E7ABB, 0xD38AB212, 0xF2B44B98, 0x7DB7ACC7, 0xB0C8A297, 0xAA2D20A6, 0x3D3E6084, 0x7F42898B, 0x58781FD5, 0x7946E65F, 0x8AE4460A, 0xDF826CA1, 0x3E3CDAEE, 0xC49071B6, 0x5A8D3A99, 0xD77BF88A, 0xD27D2D34, 0x22DD370B, 0xABDABF80, 0x1F022364, 0x9BFAEA7A, 0x3CC9FFA2, 0x21DF8D61, 0x5E7C7001, 0x9DFE85AE, 0x48912C83, 0x92F4E177, 0xF8B8FAFF, 0xBB338CD6, 0x12FD62F1, 0xE0A85D82, 0x68584A2F, 0x98F85010, 0xB73B5265, 0xA3232BAB, 0x3838B53A, 0xA2D4B48D, 0xA527447F, 0x4966B3A5, 0x85EE22D3, 0x97F234C9, 0xA02191C1, 0x03E3CE81, 0xEB5373C3, 0xCA6D8A49, 0x9605ABEF, 0x4A6409CF, 0xE851C9A9, 0xADDED054, 0x91F65B1D, 0xD68C67AC, 0x6D5E9F91, 0x2BD33C06, 0x6254FB48, 0x598F80F3, 0x8B13D92C, 0x80E8F76D, 0x0CE9AA58, 0x60A1DE04, 0xDC80D6CB, 0x17FBB74F, 0xD17F975E, 0xD0880878, 0xA625FE15, 0xFF4B0A0D, 0x14F90D25, 0xAEDC6A3E, 0x66A5B1D0, 0x1BF369FC, 0x4068B8A8, 0xD58EDDC6, 0xF547BB6A, 0x130AFDD7, 0xC0613B2E, 0xF0416ED4, 0xFA4DDFB3, 0x3ACD9076, 0x436A02C2, 0xA8D805EA, 0x6FABBADD, 0x232AA82D, 0xA4D0DB59, 0x1A04F6DA, 0xE5AE883C, 0x3B3A0F50, 0x0AEDC58C, 0xAF2BF518, 0x0B1A5AAA, 0xB3CA18FD, 0x517614D8, 0xCC69E59D, 0x35C7F4AF, 0x6B5AF045, 0xBFC2C64E };
        internal static readonly uint[] MagicTable3 = new uint[] { 0x564223ED, 0x7941E158, 0x1DD1200E, 0x3D84DA3E, 0x3CD9EFB2, 0x18E3C184, 0xABB9DCE3, 0x4C8187FA, 0x27477E29, 0xAAE4E96F, 0x8F83F2D5, 0xF237C81B, 0x48EE53FC, 0xC2C54F33, 0x2192C02C, 0xB29D277B, 0xD95BDEA8, 0x22759FA3, 0x428A8AF3, 0x5AF344E7, 0xC410F136, 0x86007455, 0x8AB1135F, 0x6CD47DCA, 0x04F5DB96, 0x1287188B, 0xB8F9FE74, 0x92C8DD4B, 0xD33F07A7, 0x5FC1A56D, 0x4E3BEDF9, 0x89564CD0, 0x72780DDB, 0xF36AFD97, 0x9E79BA41, 0x20CFF5A0, 0xB9A4CBF8, 0xF7052991, 0xCE742839, 0x7AA6BED7, 0x640ACEC6, 0xE290B503, 0x9072B748, 0x6557FB4A, 0xB6F2F37D, 0xBC962A72, 0xF90E2498, 0xFE86AF11, 0x774AEC51, 0x880B795C, 0x9395E8C7, 0x55A57C62, 0xAC31576A, 0x75F08652, 0xE4450B06, 0x61382F4C, 0xB515ACF2, 0x281146AC, 0x8188FFDC, 0xD4B78C2E, 0x37E00331, 0x24A021A6, 0x05A8EE1A, 0xEA4E060F, 0x8D3998D6, 0xA0803060, 0xF4E2761E, 0x49B36670, 0x62DF70C3, 0x01C73A1C, 0xD60DE62D, 0xC3987ABF, 0x338FD737, 0xA5B2D1EA, 0x02206593, 0xA3676FEF, 0x0C2B689A, 0x47B86B79, 0x59141B68, 0xBA439477, 0x39EB0E38, 0x912F82C4, 0xDABC8127, 0x4A5439FF, 0x96A7094D, 0x7617D9DD, 0x037D501F, 0x67ED9149, 0x1E367F81, 0xD1856DA4, 0x8EDEC759, 0x60651AC0, 0xB7AFC6F1, 0x009A0F90, 0xE02ADF00, 0x7EC96AD1, 0xA6558E65, 0x7BFB8B5B, 0xFFDB9A9D, 0x07128419, 0x0E910299, 0x355A6932, 0x19BEF408, 0x6B5CF643, 0xFAE97B17, 0x0844BC9C, 0x3A0C51B7, 0x3135BD34, 0x0D765D16, 0x6F332245, 0x9CC3D042, 0x2328AA2F, 0x0BA3E313, 0x941D634E, 0xB3C012F7, 0x1C8C1582, 0x875D41D9, 0x66B0A4C5, 0x5D7BCF6E, 0x1B049E0B, 0xE5183E8A, 0xC7F7AEB9, 0x3B51643B, 0x150F9302, 0x09198910, 0xF5BF4392, 0x2AAB2CAF, 0x13DA2D07, 0x50979DE8, 0xA85E836C, 0xE9A95980, 0xA4EFE466, 0xF08DA218, 0x5BAE716B, 0x43D7BF7F, 0x5C26FAE2, 0x8C64AD5A, 0xCCCE423A, 0xB17A78F4, 0xBF7175FD, 0xD0D85828, 0x4502017A, 0x1452A68E, 0x833295DF, 0x826FA053, 0xD5EAB9A2, 0xA903B6E0, 0xC07F2530, 0x1A59AB87, 0xDBE1B4AB, 0x0AFED69F, 0x70C267D8, 0x2C7E92AA, 0xAE8B3D69, 0x16E8CC8D, 0x4030E0F0, 0xAFD608E5, 0xA708BBE9, 0x51CAA864, 0x25FD142A, 0x80D5CA50, 0xDED35521, 0x8BEC26D3, 0x9F248FCD, 0xA1DD05EC, 0xA23A5A63, 0xDD340AAE, 0x38B63BB4, 0x2BF61923, 0x571F1661, 0x6D894846, 0x5370C267, 0xF1D09794, 0x97FA3CC1, 0x294C7320, 0x85E72BDA, 0x98AC0444, 0x6E6E17C9, 0x68BBA9CC, 0xC8A1963C, 0xCF291DB5, 0x17B5F901, 0xEF7CE785, 0xDC693F22, 0xCA1BFC3F, 0x69E69C40, 0xEB133383, 0x84BA1E56, 0xE177EA8C, 0xAD6C62E6, 0x261A4BA5, 0xE8F46C0C, 0xBDCB1FFE, 0x4DDCB276, 0xEDC68D86, 0x2EC4F8A9, 0x36BD36BD, 0x2D23A726, 0xC12210BC, 0x32D2E2BB, 0x73253857, 0xFBB44E9B, 0xE7A25489, 0x34075CBE, 0xF6581C1D, 0x46E55EF5, 0x781CD4D4, 0x103D7288, 0x719F5254, 0x445F34F6, 0xCB46C9B3, 0xE3CD808F, 0x99F131C8, 0x4B090C73, 0xC6AA9B35, 0x416DD57C, 0x9A166E47, 0x064FB195, 0xFD61F09E, 0xFC3CC512, 0xB448997E, 0x954056C2, 0xEE21D209, 0x6A01C3CF, 0x9D9EE5CE, 0x306888B8, 0x5E9C90E1, 0xEC9BB80A, 0xC9FCA3B0, 0xB0274D78, 0xE6FF6105, 0x7D2E355E, 0x9B4B5BCB, 0x522DF7EB, 0x1F6B4A0D, 0x74ADB3DE, 0x54F849EE, 0x58492EE4, 0xD806EB24, 0x7F945F5D, 0xCD9377B6, 0xBE2C4071, 0x3F3EB03D, 0xC54DC4BA, 0x11604704, 0xBB1EA1FB, 0x2F99CD25, 0xF8531114, 0x3E6385B1, 0x0FCC3715, 0xDF8E60AD, 0x6382454F, 0x7C7300D2, 0xD262322B, 0x4F66D875, 0xD750D3A1 };
        internal static readonly byte[] MagicShuffle = new byte[] { 0xAD, 0xF7, 0x97, 0x29, 0xCB, 0xCC, 0x5C, 0xC0, 0x48, 0xB6, 0x56, 0x6A, 0x72, 0x01, 0x26, 0x0B, 0x93, 0x0D, 0xD4, 0x6E, 0x70, 0xC5, 0x16, 0x6F, 0xD3, 0x68, 0xA6, 0xA0, 0x27, 0x3C, 0x08, 0x2B, 0x8B, 0xA5, 0x49, 0xEE, 0x7D, 0x18, 0xFA, 0xE5, 0x39, 0x9A, 0x40, 0xDF, 0x91, 0x28, 0x12, 0x9E, 0xC7, 0xE0, 0x6C, 0xAA, 0xE3, 0x13, 0xED, 0x7A, 0xB1, 0x9D, 0x67, 0x8D, 0xAE, 0x49, 0x10, 0xE5, 0xCD, 0x46, 0x4B, 0xD8, 0x3D, 0xD2, 0x21, 0xAE, 0x63, 0x12, 0xE9, 0x78, 0xEE, 0xD7, 0x07, 0x22, 0xC3, 0xDE, 0xE5, 0xFC, 0x56, 0x47, 0x10, 0x72, 0xF9, 0xB3, 0xE3, 0xF3, 0x04, 0x2F, 0x3C, 0x24, 0x0F, 0x46, 0x36, 0x9C, 0x17, 0x26, 0x4A, 0x92, 0x60, 0x72, 0xCD, 0x91, 0x2B, 0x21, 0xD4, 0x96, 0x5F, 0xA2, 0x93, 0x03, 0x41, 0xB5, 0x86, 0x8A, 0x46, 0x29, 0x38, 0x87, 0x82, 0x91, 0x0B, 0xEB, 0x45, 0xEF, 0x6C, 0x3D, 0x34, 0x1D, 0xA5, 0x92, 0xE0, 0x84, 0xBA, 0xBA, 0x83, 0xC6, 0x97, 0x03, 0xF9, 0xC2, 0x19, 0x4E, 0x8C, 0xC7, 0x5C, 0xED, 0x85, 0x9F, 0x52, 0x8C, 0x7F, 0x17, 0xBE, 0x0E, 0x18, 0xAF, 0x47, 0x2D, 0x46, 0x73, 0x9C, 0xD1, 0x38, 0xE1, 0x37, 0x5A, 0xF9, 0x4A, 0xEF, 0x4B, 0xB3, 0x18, 0x73, 0x07, 0x8D, 0x98, 0x30, 0x68, 0xDD, 0x9D, 0x85, 0xBA, 0x3B, 0x8F, 0x1B, 0xB4, 0x20, 0xE3, 0x95, 0x0F, 0xB3, 0x3D, 0xFE, 0x09, 0x86, 0x24, 0x25, 0x6D, 0x14, 0xB2, 0xDD, 0x6F, 0x4F, 0x7F, 0x52, 0x85, 0x32, 0x9F, 0x63, 0x25, 0x0A, 0xC3, 0x5F, 0xBB, 0xB0, 0xEB, 0xBD, 0xCF, 0xBF, 0xFE, 0x26, 0x51, 0xB5, 0x30, 0xEC, 0xA8, 0xDF, 0xFD, 0xAE, 0x28, 0x90, 0x41, 0x88, 0x71, 0x18, 0x25, 0x09, 0x72, 0xB1, 0x7D, 0xDF, 0x2E, 0xE6, 0x6F, 0x11, 0x67, 0x56, 0x23, 0x0D, 0x7D };
        internal static readonly uint[][] MagicTables = new uint[][] { MagicTable0, MagicTable1, MagicTable2, MagicTable3 };
        internal static readonly byte[] MagicShuffle2 = new byte[] { 0x97, 0x73, 0x5B, 0xB2, 0xBA, 0xE2, 0x63, 0xF2, 0x70, 0x89, 0xF0, 0x62, 0x06, 0x08, 0xE3, 0x25, 0xD2, 0x97, 0xAF, 0xB5, 0x2B, 0x11, 0xAD, 0x88, 0x76, 0x84, 0x55, 0xAE, 0xF9, 0x44, 0xBC, 0xDC, 0xB9, 0x05, 0xC2, 0xBD, 0x99, 0xA8, 0x1D, 0xB0, 0xEC, 0x51, 0x37, 0x5B, 0x95, 0xDE, 0xD6, 0xCD, 0x6D, 0xAC, 0xA8, 0xC8, 0x2E, 0x11, 0x52, 0x7B, 0x26, 0x9C, 0x62, 0xF4, 0xD7, 0xD1, 0xB1, 0x31, 0xE6, 0x70, 0xB3, 0xBB, 0x5F, 0x48, 0xCF, 0x4A, 0x22, 0xDD, 0xC3, 0xAC, 0xED, 0xF3, 0x62, 0x74, 0xEB, 0x45, 0x79, 0x50, 0xEC, 0x3A, 0xC1, 0x4F, 0x8E, 0xEB, 0x82, 0xBB, 0x10, 0xE7, 0xEB, 0x64, 0x6B, 0x42, 0x74, 0xE8, 0x02, 0x31, 0x41, 0x6C, 0x2E, 0xDE, 0xC5, 0xFB, 0xC6, 0x59, 0xC1, 0x20, 0xF4, 0xFA, 0x7B, 0x9D, 0xD8, 0x7B, 0x2F, 0x78, 0x76, 0xA7, 0xC0, 0xC6, 0xE5, 0x7F, 0xBE, 0xA7, 0x71, 0x33, 0xED, 0xF4, 0xBA, 0x9F, 0x06, 0xF9, 0xB9, 0x99, 0xBD, 0xBE, 0x29, 0x1D, 0x90, 0xF2, 0x9E, 0x5B, 0x79, 0xAE, 0x49, 0xEB, 0x9B, 0x32, 0x0D, 0xCF, 0x2F, 0xD5, 0x35, 0x37, 0x64, 0x15, 0x6A, 0x80, 0x8B, 0x79, 0xB3, 0xDB, 0x40, 0x44, 0x59, 0x4E, 0xAD, 0xF2, 0x2D, 0xB1, 0x10, 0xE3, 0xA5, 0x05, 0xB8, 0x07, 0x59, 0xA9, 0xE4, 0x91, 0x21, 0xB5, 0xFF, 0x3A, 0x86, 0x56, 0xB6, 0x5A, 0xD7, 0x10, 0xB8, 0x27, 0x40, 0xD5, 0xF3, 0xA9, 0xAD, 0xA6, 0xA4, 0xB5, 0xDA, 0x43, 0x0B, 0x2B, 0x61, 0x60, 0x2F, 0x90, 0x5B, 0x12, 0x47, 0x2B, 0x57, 0x1D, 0xA6, 0x8D, 0x26, 0xD3, 0xC4, 0x3A, 0x98, 0x96, 0x4B, 0xBA, 0x50, 0xB1, 0xC9, 0xFD, 0xED, 0xA8, 0xD5, 0x6D, 0x50, 0x9C, 0xF8, 0xC1, 0x6F, 0xE9, 0x4B, 0x4B, 0x83, 0x8E, 0x89, 0x98, 0xE9, 0x18, 0x31, 0x8E, 0x40, 0x58, 0x00, 0xA1 };
        internal static uint GetMagicConst(int tableIdx, byte[] data, int index) => MagicTables[tableIdx][BlkFile.XorCombine(data, 0x10 * IndexScramble[4 * index + tableIdx])];
    }
}
